generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Operador {
  id       String  @id @default(uuid())
  nome     String  @unique @map("usuario")  // ← é isso que queremos
  senha    String
  ativo    Boolean @default(true)
  criadoEm DateTime @default(now()) @map("createdAt")
  @@map("operadores")
}

model Frota {
  id           String        @id @default(uuid())
  criadoEm     DateTime      @default(now()) @map("createdAt")
  nome         String?
  dispositivos Dispositivo[]
  vendas       Venda[]

  @@index([criadoEm])
}

model Venda {
  id      String   @id @default(uuid())
  frotaId String
  valor   Float
  data    DateTime @default(now())
  frota   Frota    @relation(fields: [frotaId], references: [id])

  @@index([frotaId])
  @@index([data])
}

model Dispositivo {
  id       String   @id @default(uuid())
  ip       String
  criadoEm DateTime @default(now()) @map("createdAt")
  frotaId  String
  frota    Frota    @relation(fields: [frotaId], references: [id])

  @@index([frotaId])
  @@index([ip])
}



model Pagamento {
  id        String        @id @default(cuid())
  valor     Float
  descricao String
  chavePix  String?
  payload   String?
  status    String        @default("pendente")
  plano     String
  criadoEm  DateTime      @default(now())
  pagoEm    DateTime?
  expiraEm  DateTime?
  ip        String?
  mac       String?
  roteador  String?
  sessoes   SessaoAtiva[]

  @@index([descricao, valor, status])
  @@index([mac])
  @@index([criadoEm])
  @@index([status, pagoEm])
  @@map("pagamentos")
}

model SessaoAtiva {
  id          String     @id @default(cuid())
  ipCliente   String     @unique
  macCliente  String?
  plano       String
  inicioEm    DateTime   @default(now())
  expiraEm    DateTime
  ativo       Boolean    @default(true)
  pagamentoId String?
  pagamento   Pagamento? @relation(fields: [pagamentoId], references: [id])

  @@index([ativo])
  @@map("sessoes_ativas")
}


model Transacao {
  id        String    @id @default(cuid())
  txid      String    @unique
  valor     Decimal   @db.Decimal(10, 2)
  descricao String
  status    Status    @default(PENDENTE)
  mac       String?
  ip        String?
  minutos   Int?      @default(120)
  linkOrig  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  paidAt    DateTime?
}

enum Status {
  PENDENTE
  PAGO
  EXPIRADO
  CANCELADO
}
model Config {
  key       String   @id
  value     String
  updatedAt DateTime @updatedAt
}
